// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace TelegramPizzaria.Migrations
{
    [DbContext(typeof(ContextDb))]
    [Migration("20200914033258_orders")]
    partial class orders
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7");

            modelBuilder.Entity("Models.Data.Bebida", b =>
                {
                    b.Property<int>("BebidaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeBebida")
                        .HasColumnType("TEXT");

                    b.HasKey("BebidaId");

                    b.ToTable("bebidas");
                });

            modelBuilder.Entity("Models.Data.Combo", b =>
                {
                    b.Property<int>("ComboId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BebidaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeCombo")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PizzaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ComboId");

                    b.HasIndex("BebidaId");

                    b.HasIndex("PizzaId");

                    b.ToTable("combos");
                });

            modelBuilder.Entity("Models.Data.Orders", b =>
                {
                    b.Property<int>("OrdersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("ComboNameReference")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOrder")
                        .HasColumnType("TEXT");

                    b.Property<double>("UserID")
                        .HasColumnType("REAL");

                    b.HasKey("OrdersId");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("Models.Data.Pizza", b =>
                {
                    b.Property<int>("PizzaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomePizza")
                        .HasColumnType("TEXT");

                    b.HasKey("PizzaId");

                    b.ToTable("pizzas");
                });

            modelBuilder.Entity("Models.Data.listIngredientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PizzaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("item")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PizzaId");

                    b.ToTable("listIngredientes");
                });

            modelBuilder.Entity("Models.Data.Combo", b =>
                {
                    b.HasOne("Models.Data.Bebida", "Bebida")
                        .WithMany()
                        .HasForeignKey("BebidaId");

                    b.HasOne("Models.Data.Pizza", "Pizza")
                        .WithMany()
                        .HasForeignKey("PizzaId");
                });

            modelBuilder.Entity("Models.Data.listIngredientes", b =>
                {
                    b.HasOne("Models.Data.Pizza", null)
                        .WithMany("Ingredientes")
                        .HasForeignKey("PizzaId");
                });
#pragma warning restore 612, 618
        }
    }
}
